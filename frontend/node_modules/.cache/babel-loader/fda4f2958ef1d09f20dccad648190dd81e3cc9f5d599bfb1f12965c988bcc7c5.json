{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tpong\\\\OneDrive\\\\Documents\\\\____CS_Projects_Tobias\\\\memory_test\\\\src\\\\App.js\";\nimport './App.css';\nimport Tile from \"./Tile\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  const grid = new Array(16);\n  const letters = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H'];\n  var tileKey = 0;\n  function isFilled(value) {\n    return value !== undefined;\n  }\n\n  //creating the grid positions for the letters\n  for (var i = 0; i < letters.length; i++) {\n    for (var j = 0; j < 2; j++) {\n      let randomIndex;\n      let posValue;\n      do {\n        randomIndex = Math.floor(Math.random() * 16);\n        posValue = grid[randomIndex];\n      } while (isFilled(posValue));\n      grid[randomIndex] = letters[i];\n    }\n  }\n  console.log(grid.toString());\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Memory Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid\",\n      children: grid.map(letter => {\n        return /*#__PURE__*/_jsxDEV(Tile, {\n          letter: letter\n        }, tileKey++, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 18\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Tile","jsxDEV","_jsxDEV","App","grid","Array","letters","tileKey","isFilled","value","undefined","i","length","j","randomIndex","posValue","Math","floor","random","console","log","toString","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","letter","_c","$RefreshReg$"],"sources":["C:/Users/tpong/OneDrive/Documents/____CS_Projects_Tobias/memory_test/src/App.js"],"sourcesContent":["import './App.css';\nimport Tile from \"./Tile\";\n\nfunction App() {\n\n  const grid = new Array(16);\n  const letters = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H']\n  var tileKey = 0;\n\n  function isFilled(value) {\n    return value !== undefined;\n  }\n\n  //creating the grid positions for the letters\n  for (var i = 0; i < letters.length; i++) {\n    for (var j = 0; j < 2; j++) {\n      let randomIndex;\n      let posValue;\n      do {\n        randomIndex = Math.floor(Math.random() * 16);\n        posValue = grid[randomIndex];\n      } while (isFilled(posValue));\n\n      grid[randomIndex] = letters[i];\n    }\n  }\n  console.log(grid.toString());\n\n  return (\n    <div className=\"App\">\n      <h1>Memory Game</h1>\n      <div className=\"grid\">\n        {grid.map((letter) => {\n          return <Tile key={tileKey++} letter={letter} />;\n        })}\n      </div>\n      \n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAO,WAAW;AAClB,OAAOA,IAAI,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,GAAGA,CAAA,EAAG;EAEb,MAAMC,IAAI,GAAG,IAAIC,KAAK,CAAC,EAAE,CAAC;EAC1B,MAAMC,OAAO,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACxD,IAAIC,OAAO,GAAG,CAAC;EAEf,SAASC,QAAQA,CAACC,KAAK,EAAE;IACvB,OAAOA,KAAK,KAAKC,SAAS;EAC5B;;EAEA;EACA,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,OAAO,CAACM,MAAM,EAAED,CAAC,EAAE,EAAE;IACvC,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;MAC1B,IAAIC,WAAW;MACf,IAAIC,QAAQ;MACZ,GAAG;QACDD,WAAW,GAAGE,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC;QAC5CH,QAAQ,GAAGX,IAAI,CAACU,WAAW,CAAC;MAC9B,CAAC,QAAQN,QAAQ,CAACO,QAAQ,CAAC;MAE3BX,IAAI,CAACU,WAAW,CAAC,GAAGR,OAAO,CAACK,CAAC,CAAC;IAChC;EACF;EACAQ,OAAO,CAACC,GAAG,CAAChB,IAAI,CAACiB,QAAQ,CAAC,CAAC,CAAC;EAE5B,oBACEnB,OAAA;IAAKoB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBrB,OAAA;MAAAqB,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBzB,OAAA;MAAKoB,SAAS,EAAC,MAAM;MAAAC,QAAA,EAClBnB,IAAI,CAACwB,GAAG,CAAEC,MAAM,IAAK;QACpB,oBAAO3B,OAAA,CAACF,IAAI;UAAiB6B,MAAM,EAAEA;QAAO,GAA1BtB,OAAO,EAAE;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAmB,CAAC;MACjD,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEH,CAAC;AAEV;AAACG,EAAA,GApCQ3B,GAAG;AAsCZ,eAAeA,GAAG;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}